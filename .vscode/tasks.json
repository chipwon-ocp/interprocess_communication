{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "cmsis-csolution.build: Build",
            "type": "cmsis-csolution.build",
            "solution": "${command:cmsis-csolution.getSolutionPath}",
            "rebuild": false,
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Build project through shell with cbuild",
            "type": "shell",
            "command": "cbuild",
            "args": [
                "${command:cmsis-csolution.getSolutionPath}",
                "--context-set",
                "--packs",
                "--update-rte",
                "--rebuild"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "Clean all (including YAML build files)",
            "type": "shell",
            "windows": {
                "command": [
                    "cbuild ${command:cmsis-csolution.getSolutionPath} --clean;",
                    "rm -Force ./turtle/*.cbuild.yml;",
                    "rm -Force ./rabbit/*.cbuild.yml;"
                ]
            },
            "linux": {
                "command": [
                    "cbuild ${command:cmsis-csolution.getSolutionPath} --clean;",
                    "rm -f ./turtle/*.cbuild.yml;",
                    "rm -f ./rabbit/*.cbuild.yml;"
                ]
            },
            "problemMatcher": []
        },
        {
            "label": "First time pack installation",
            "type": "shell",
            "command": [
                "cpackget init https://www.keil.com/pack/index.pidx;",
                "cpackget add ARM::CMSIS@6.1.0;",
                "cpackget add ARM::V2M_MPS3_SSE_300_BSP@1.5.0;",
                "cpackget add ARM::CMSIS-FreeRTOS@11.1.0;",
                "cpackget add ARM::CMSIS-Compiler@2.1.0;",
                "cpackget add AlifSemiconductor::Ensemble@1.3.0;",
                "cpackget list;",
                "echo 'Pack installation has been completed';"
            ],
            "problemMatcher": []
        },
        {
            "label": "Prepare program with Security Toolkit",
            "type": "shell",
            "windows": {
                "command": [
                    "$outputElfFilename='${command:cmsis-csolution.getBinaryFile}';",
                    "$outputBinFilename=${outputElfFilename}.Substring(0, $outputElfFilename.Length -3) + 'bin';",
                    "cp \"$outputBinFilename\" '${config:alif.setools.root}/build/images/${input:project}-${command:cmsis-csolution.getProcessorName}.bin';",
                    "cp './.alif/${command:cmsis-csolution.getProcessorName}_cfg.json' '${config:alif.setools.root}/${input:project}-${command:cmsis-csolution.getProcessorName}.json';"
                ]
            },
            "linux": {
                "command": [
                    "outputElfFilename='${command:cmsis-csolution.getBinaryFile}';",
                    "cp \"${outputElfFilename/%???/bin}\" '${config:alif.setools.root}/build/images/${input:project}-${command:cmsis-csolution.getProcessorName}.bin';",
                    "cp './.alif/${command:cmsis-csolution.getProcessorName}_cfg.json' '${config:alif.setools.root}/${input:project}-${command:cmsis-csolution.getProcessorName}.json';"
                ]
            },
            "problemMatcher": []
        },
        {
            "label": "Program with Security Toolkit",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f ${input:project}-${command:cmsis-csolution.getProcessorName}.json;",
                "./app-write-mram -p;"
            ],
            "problemMatcher": [],
            "dependsOn": "Prepare program with Security Toolkit"
        },
        {
            "label": "Prepare program with Security Toolkit (multicore)",
            "type": "shell",
            "command": [
                "cp './out/turtle/m55he/${input:build}/turtle.bin' '${config:alif.setools.root}/build/images/turtle-M55_HE.bin';",
                "cp './out/rabbit/m55hp/${input:build}/rabbit.bin' '${config:alif.setools.root}/build/images/rabbit-M55_HP.bin';",
                "cp './.alif/M55_HE_HP_cfg.json' '${config:alif.setools.root}/multicore-M55_HE_HP_cfg.json';"
            ],
            "problemMatcher": []
        },
        {
            "label": "Program with Security Toolkit (multicore)",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f multicore-M55_HE_HP_cfg.json;",
                "./app-write-mram -p;"
            ],
            "problemMatcher": [],
            "dependsOn": "Prepare program with Security Toolkit (multicore)"
        },
        {
            "label": "Program with Security Toolkit (select COM port)",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f ${input:project}-${command:cmsis-csolution.getProcessorName}.json;",
                "./app-write-mram -p -d;",
                "rm ./build/images/${input:project}-${command:cmsis-csolution.getProcessorName}.bin;",
                "rm ./alif-img.json;"
            ],
            "problemMatcher": [],
            "dependsOn": "Prepare program with Security Toolkit"
        },
        {
            "label": "Update TOC with Security Toolkit",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f ${input:project}-${command:cmsis-csolution.getProcessorName}.json;",
                "./app-write-mram -S;"
            ],
            "problemMatcher": [],
            "dependsOn": "Prepare program with Security Toolkit"
        },
        {
            "label": "Install debug stubs with Security Toolkit",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f ./build/config/app-cpu-stubs.json;",
                "./app-write-mram;"
            ],
            "problemMatcher": []
        },
        {
            "label": "Install debug stubs with Security Toolkit (select COM port)",
            "type": "shell",
            "options": {"cwd": "${config:alif.setools.root}"},
            "command": [
                "./app-gen-toc -f ./build/config/app-cpu-stubs.json;",
                "./app-write-mram -d;"
            ],
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "type": "pickString",
            "id": "project",
            "description": "Project to build",
            "options": [
                "turtle",
                "rabbit"
            ],
            "default": "turtle"
        },
        {
            "type": "pickString",
            "id": "build",
            "description": "Build type",
            "options": [
                "debug",
                "release"
            ],
            "default": "debug"
        },
        {
            "type": "pickString",
            "id": "target",
            "description": "Target to build for",
            "options": [
                "avhseml",
                "m55he",
                "m55hp"
            ],
            "default": "m55he"
        }
    ]
}
